Описание и настройка протокола Mailbox | Беспроводная передача сообщений
============================================================

Общее описание протокола
------------------------

Mailbox - это протокол передачи данных между устройствами в сети WI-FI. Данный протокол был впервые реализован в контроллерах
Трик, после чего получил поддержку со стороны квадрокоптеров Геоскан. Данные передаются побайтово в текстовом формате,
принцип работы очень похож на работу с серийным последовательным портом (Serial / UART).

У каждого устройства в сети "почтовых ящиков" есть свой борт-номер, устанавливаемый пользователем в программе на этом устройстве.
Борт-номер представляет собой целое число >0, оно должно быть уникальным для каждого устройства в сети.

.. image:: 1.png
    :align: center
    :width: 500

В сети нет главного устройства (отсутствует иерархия MASTER - SLAVES), каждый может общаться с каждым, однако это не
распределенная сеть, поскольку при выходе из строя точки доступа WI-Fi, передача данных будет нарушена.

Точкой доступа не обязательно должен быть WI-Fi роутер, в качестве точки доступа может быть одно из устройств, выспутающих
участниками сети обмена сообщениями, напрмер, квадрокоптер Геоскан Пионер Мини.

.. note:: Пионер Мини поддерживает лишь одно активное подключение по WI-FI, поэтому, если у вас обмениваться сообщениями должны больше двух устройств, то нужно перевести Мини в режим клиента и подключить к существующей WI-Fi сети (вашему роутеру, или, например, контроллеру Трик). Про подключение квадрокоптера к существующей сети можно почитать на странице `описания веб интерфейса. <../../../../instructions/pioneer-mini/settings/esp_webinterface.html>`__

После подключения минимум двух устройств к WI-FI сети они могут начать обмениваться данными, для этого одно из этих устройств
(и каждое новое подключающееся к WI-FI сети) должно зарегистрироваться в сети почтовых ящиков.
Это делается командой ``mailbox.connect(ip, port)`` (`см описание <../../../lua/lua.html#mailbox.connect>`__).

В момомент выполнения этой команды новое подключающееся устройство регистрируется в сети почтовых ящиков, но казалось бы,
судя по команде, подключение происходит только к одному устройству, назовем его D1. Дело в том, что когда устройство D1
получает сообщение о регистрации в сети от нового устройства, то D1 передает новому устройству таблицу со всеми известными
ему устройствами, которые уже были зарегистрированы в сети, таким образом, новое устройство узнает информацию о всех участниках
сети и может отправлять сообщения любому из них.

.. important:: После инициализации подключения, т.е. вызова команды ``mailbox.connect(ip, port)``, что со стороны Трик, что со стороны Пионер, для стабильной работы обязательно нужно ставить задержку (примерно 100мс), чтобы устройства успели обработать новые подключения.

После регистрации в сети, устройства могут обмениваться сообщениями. Как уже говорилось, на данный момент протокол
поддерживают две платформы: Геоскан Пионер и Трик. Удобной особенностью является то, что вне зависимости от платформы, API не будет
значительно отличаться.

Основными и самыми часто используемыми командами являются (полное описание API `см. на странице <../../../lua/lua.html#mailbox>`__):

#. ``mailbox.connect(ip, port)`` - производит подключение и регистрацию в сети,
#. ``mailbox.send(hull, message)`` - отправляет сообщение,
#. ``mailbox.receive(blocking)`` - принимает сообщение.

Алгоритм написания программ для общения между устройствами
----------------------------------------------------------

Рассмотрим последовательность действий, когда одно устройство хочет передать сообщение другому:

#. Произвести регистрацию в сети командой ``mailbox.connect(ip, port)`` **при первом запуске программы**;
#. Выполнить команду ожидания (примерно 100мс);
#. Выполить команды приемопередачи сообщений:
    * Для отправки сообщения выполнить команду ``mailbox.send(hull, message)``;
    * Для приема сообщения выполнить команду ``mailbox.receive(true)``, которая остановит выполнение программы до момента получения сообщения;
#. Можно производить любые дальнейшие операции. Если вы отправляете числовую информацию, то после приема сообщения не забывайте перевести полученное сообщение к числовому типу.

.. note:: Дополнительное напоминание, что регистрацию в сети производить нужно только один раз в начале выполнения программы, до различных циклов и функций, если они у вас есть.

Подготовка к использованию протокола
------------------------------------

.. tile::
    :head: Алгоритм действий для квадрокоптеров Пионер
    :hpx: 60

    Чтобы начать использовать протокол mailbox с квадрокоптерами Пионер необходимо выполнить следующие действия:

    #. Установить поддерживающие эту функцию `прошивки <https://disk.yandex.ru/d/Bs1QOpgg-w9Y7A>`__ автопилота и ESP32 по интрукциям: `для АП <../../../../instructions/pioneer-mini/settings/firmware_update.html>`__, `для ESP32 <../../../../instructions/pioneer-mini/settings/esp32-update.html>`__;
    #. Ознакомиться с `документацией по API <../../../lua/sections/0009_mailbox.html>`__ протокола mailbox;
    #. Подключить все устройства Пионер к одной WI-Fi сети по `инструкции <../../../../instructions/pioneer-mini/settings/esp_webinterface.html>`__ с помощью WEB интерфеса квадрокоптера.


.. tile::
    :head: Алгоритм действий для контроллеров Трик
    :hpx: 60

    Если вы планируете использовать контроллер Трик, то необходимо выполнить следующие действия:

    #. Удостовериться в актуальности прошивки, при необходимости обновить ее `по инструкции <https://help.trikset.com/trik/firmware>`__;
    #. Для программирования контроллеров ТРИК необходимо скачать среду разработки TrikStudio, скачать ее можно с `официального сайта <https://trikset.com/downloads#trikstudio>`__;
    #. Подключить все устройства Трик к одной WI-Fi сети по `инструкции <https://help.trikset.com/trik/wi-fi/network-connection>`__ с помощью WEB интерфеса контроллера ТРИК.


.. tile::
    :head: Алгоритм действий для настройки виртуального Трик
    :hpx: 60

    Если вы планируете использовать виртуальный контроллер Трик в среде TrikStudio, то необходимо выполнить следующие действия:

    #. Скачать среду разработки TrikStudio с `официального сайта <https://trikset.com/downloads#trikstudio>`__,
    #. Открыть среду TrikStudio и либо создать новый проект, либо октрыть любой существующий:

        .. image:: /_static/images/virtual-trik-1.png
            :align: center
            :width: 400

    #. Открыть настройки:

        .. image:: /_static/images/virtual-trik-2.png
            :align: center
            :width: 400

    #. Промотать немного вниз и поставить флажок для параметра "Активировать Mailbox" и установить любой борт-номер:

        .. image:: /_static/images/virtual-trik-3.png
            :align: center
            :width: 400

        .. image:: /_static/images/virtual-trik-4.png
            :align: center
            :width: 400

    #. После перезагрузки среды разработки вы сможете писать идентичный код, как для настоящего контроллера Трик.
       При выборе 2д модели и запуске программы у вас откроется Режим Отладки, в котором будет находиться виртуальная
       модель робота, позволяющая пользоваться протоколом mailbox не имея реального контроллера Трик:

        .. image:: /_static/images/virtual-trik-5.png
            :align: center
            :width: 400



Примеры программ
-----------------

.. tile::
    :head: Передача сообщений между Пионером и Триком
    :hpx: 60

    .. include:: examples/geo-trik.rst

.. tile::
    :head: Прием значений для управления светодиодами
    :hpx: 60

    .. include:: examples/bits.rst

.. tile::
    :head: Управление квадрокоптером с контроллера Трик
    :hpx: 60

    В данном проекте реализовано управление светодиодами, полетом, а также получение данных телеметрии квадрокоптера
    с помощью протокола Mailbox. Управление производится с помощью самостоятельно написанного графического интерфейса
    на контроллере Трик.

    Подробнее можете узнать на `странице проекта <../../../../learning-cases/trik_control_pioneer/trik_control_pioneer.html>`__